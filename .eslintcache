[{"/Users/Ted/dad-bingo/src/index.js":"1","/Users/Ted/dad-bingo/src/App.js":"2","/Users/Ted/dad-bingo/src/reportWebVitals.js":"3","/Users/Ted/dad-bingo/src/BingoBoard.js":"4","/Users/Ted/dad-bingo/src/Square.js":"5","/Users/Ted/dad-bingo/src/ActionsList.js":"6","/Users/Ted/dad-bingo/src/SayingsList.js":"7","/Users/Ted/dad-bingo/src/Leaderboard.js":"8","/Users/Ted/dad-bingo/src/PlayerStatus.js":"9","/Users/Ted/dad-bingo/src/UserHome.js":"10","/Users/Ted/dad-bingo/src/NavBar.js":"11","/Users/Ted/dad-bingo/src/SmallBingoBoard.js":"12","/Users/Ted/dad-bingo/src/SmallSquare.js":"13","/Users/Ted/dad-bingo/src/MainScreen.js":"14"},{"size":339,"mtime":1607892519000,"results":"15","hashOfConfig":"16"},{"size":829,"mtime":1608085745000,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1607792991000,"results":"18","hashOfConfig":"16"},{"size":2524,"mtime":1608094160000,"results":"19","hashOfConfig":"16"},{"size":2057,"mtime":1608092464000,"results":"20","hashOfConfig":"16"},{"size":633,"mtime":1607920813000,"results":"21","hashOfConfig":"16"},{"size":635,"mtime":1607920820000,"results":"22","hashOfConfig":"16"},{"size":737,"mtime":1607998754000,"results":"23","hashOfConfig":"16"},{"size":1283,"mtime":1608098791000,"results":"24","hashOfConfig":"16"},{"size":9963,"mtime":1608187921000,"results":"25","hashOfConfig":"16"},{"size":6595,"mtime":1608191288000,"results":"26","hashOfConfig":"16"},{"size":2472,"mtime":1608098839000,"results":"27","hashOfConfig":"16"},{"size":573,"mtime":1608005675000,"results":"28","hashOfConfig":"16"},{"size":506,"mtime":1608087704000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1qssn2f",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"/Users/Ted/dad-bingo/src/index.js",[],["64","65"],"/Users/Ted/dad-bingo/src/App.js",[],"/Users/Ted/dad-bingo/src/reportWebVitals.js",[],"/Users/Ted/dad-bingo/src/BingoBoard.js",[],"/Users/Ted/dad-bingo/src/Square.js",[],"/Users/Ted/dad-bingo/src/ActionsList.js",[],"/Users/Ted/dad-bingo/src/SayingsList.js",[],"/Users/Ted/dad-bingo/src/Leaderboard.js",[],"/Users/Ted/dad-bingo/src/PlayerStatus.js",["66","67"],"import React from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SmallBingoBoard from \"./SmallBingoBoard\"\nimport _ from \"underscore\";\n\nclass PlayerStatus extends React.Component {\n  constructor(props) {\n        super(props);\n        var boards = []\n        this.state = {\n            boards: boards,\n        };\n    }\n\n   getBoards(){\n      const user_name = this.props.user_name\n      const boards = []\n      const current_boards = this.props.other_current_boards\n      const active_dadisms = this.props.active_dadisms\n      _.each(current_boards, function (b) {            \n              boards.push({board: b.board, user_name: b.user_name, active_dadisms: active_dadisms})\n          })\n      return boards\n   }\n  \n\n  render() {\n        return (\n          <div>\n          <Row>\n          <Col>\n          <div style={{overflow:'scroll', height:'500px', width:'90%'}} >\n          {this.getBoards().map( x => \n              <div>\n              <SmallBingoBoard user_board_info={x} />\n              <span><br/></span>\n              </div>\n          )}\n          \n          </div>\n          </Col>\n          </Row>\n          </div>\n            )\n      }\n    } \n       \nexport default PlayerStatus;","/Users/Ted/dad-bingo/src/UserHome.js",["68","69"],"import React from \"react\";\n\nimport SayingsList from './SayingsList';\nimport ActionsList from './ActionsList';\nimport Leaderboard from './Leaderboard';\nimport PlayerStatus from './PlayerStatus';\nimport BingoBoard from './BingoBoard.js'\n\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\n\nimport { DadBingoNavBar, NewSayingModal } from './NavBar'\nimport _ from \"underscore\";\n\n\nclass UserHome extends React.Component {\n\n  componentWillMount(props){\n    this.setState({user_id:1,\n                          sayings: [],\n                          actions: [],\n                          current_boards: {1:{dadisms:[]}},\n                          user_wins: [],\n                          active_dadisms: [],\n                          showSayings: false,\n                          showActions: false,\n                          addSaying: '',\n                          addAction: '',\n                          game_loaded: false\n                        });\n  }\n\n  componentDidMount(){\n    const url = 'https://dadbingo.herokuapp.com/game/' + this.props.match.params.user_id\n        const requestOptions = {\n          method: 'GET',\n      };\n        fetch( url ,requestOptions) \n              .then(response => response.json())\n              .then((response) =>{\n                var active_dadisms = response.active_dadisms\n                active_dadisms.push(\"FreeSpace\")\n                var sayings = []\n                var actions = []\n                var user_id = this.props.match.params.user_id\n                var game_id = response.game_id\n                this.setState({game_loaded: game_id===undefined})\n                _(response.dadisms).each(function(dadism, i){\n                  if (dadism.type === 'saying'){\n                    sayings.push(dadism.content)\n                  } \n                  if (dadism.type === 'action'){\n                    actions.push(dadism.content)\n                  }\n                });\n                var other_current_boards = []\n                var current_board = ''\n                _(response.user_boards).each(function(user_board){\n                  let newBoard = []\n                  let player_id = user_board.user_id\n                  _(user_board.board).each(function(square_id, idx){\n                    \n                    if (idx===12) {\n                      newBoard.push({'_id':\"FreeSpace\",'content':\"Free Space.. we know, nothing is 'free'...\"})\n                    }\n                    let dadism = _.find(response.dadisms, \n                            function (dadism) { \n                                return dadism._id=== square_id; \n                            }); \n                    newBoard.push(dadism)\n                  })\n                  let user_name = _.where(response.players, {user_id: player_id})[0].name\n                  if (user_id==user_board.user_id) {\n                    current_board = {user_name: user_name, board: newBoard}\n                  } else {\n                    other_current_boards.push({user_name: user_name, board: newBoard})  \n                  }\n                  \n                })\n                var user_name = _.where(response.players, {user_id: user_id})[0].name\n                var board_resets = _.where(response.player_resets, {user_id: user_id})[0].resets\n                var leaderboard = response.leaderboard\n                var players = response.players\n                this.setState({\n                          board_resets: board_resets,\n                          user_name: user_name,\n                          user_id: user_id,\n                          game_id: game_id,\n                          sayings: sayings,\n                          actions: actions,\n                          other_current_boards: other_current_boards,\n                          current_board: current_board,\n                          active_dadisms: active_dadisms,\n                          leaderboard: leaderboard,\n                          players: players\n                        })\n              })\n  }\n\n  handleOnSubmitSaying(e) {\n      e.preventDefault();\n      const url = 'https://dadbingo.herokuapp.com/dadisms';\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ content: this.state.addSaying, type: \"saying\" })\n      };\n      fetch( url ,requestOptions) \n            .then(response => this.setState({showSayings: false}))\n            .catch((error) => {\n              this.setState({showSayings: false})\n            })\n    } \n\n  handleOnSubmitAction(e) {\n      e.preventDefault();\n      const url = 'https://dadbingo.herokuapp.com/dadisms';\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ content: this.state.addAction, type: \"action\" })\n      };\n      \n      fetch( url ,requestOptions) \n            .then(response => this.setState({showActions: false}))\n            .catch((error) => {\n              this.setState({showActions: false})\n            })\n    } \n\n  handleCloseSayings(){\n    this.setState({showSayings: false})\n  }\n  handleShowSayings(){\n    this.setState({showSayings: true})\n  }\n\n  handleAddSaying(event){\n    \n    this.setState({addSaying: event.target.value})\n  }\n\n  handleCloseActions(){\n    this.setState({showActions: false})\n  }\n  handleShowActions(){\n    this.setState({showActions: true})\n  }\n\n  handleAddAction(event){\n    this.setState({addAction: event.target.value})\n  }\n\n  render() {\n    return (\n          <div className=\"dadBingoContainer\">\n          <DadBingoNavBar logged_in={true} user_id={this.state.user_id} user_name={this.state.user_name} board_resets={this.state.board_resets}/>\n          <Container fluid>\n          <Row>\n            <Col  xs={3} className=\"border-right\">\n            <div >\n              <Row>\n              <span><br/></span>\n              </Row>\n              <Row>\n              <Col>\n              <h4 className=\"app_title_font\">Leaderboard</h4>\n              </Col>\n              </Row>\n              <Row>\n              <Col>\n              <Leaderboard user_wins= {this.state.leaderboard}/>\n              </Col>\n              </Row>\n              <Row>\n              <span><br/></span>\n              </Row>\n              <Row>\n              <Col>\n              <h4 className=\"app_title_font no_new_line\">Do As I Say</h4>\n              <span>&nbsp;&nbsp;&nbsp;</span><FontAwesomeIcon icon={faPlusSquare} onClick={this.handleShowSayings.bind(this)}/>\n              <div id=\"new_saying_form\">\n                <Modal show={this.state.showSayings} onHide={this.handleCloseSayings.bind(this)}>\n                <Modal.Header closeButton>\n                  <Modal.Title></Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <Form >\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>What else did he say?</Form.Label>\n                    <Form.Control type=\"saying\" placeholder=\"\"  onChange={this.handleAddSaying.bind(this)}/>\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\" onClick={this.handleOnSubmitSaying.bind(this)}>\n                    Submit\n                  </Button>\n                </Form>\n                </Modal.Body>\n                </Modal>\n              </div>\n              <SayingsList sayings= {this.state.sayings}/>\n              </Col>\n              </Row>\n              <Row>\n              <Col>\n              <span><br/></span>\n              <h4 className=\"app_title_font no_new_line\">Do As I Do</h4>\n              <span>&nbsp;&nbsp;&nbsp;</span><FontAwesomeIcon icon={faPlusSquare} onClick={this.handleShowActions.bind(this)}/>\n              <div id=\"new_action_form\">\n                <Modal show={this.state.showActions} onHide={this.handleCloseActions.bind(this)}>\n                <Modal.Header closeButton>\n                  <Modal.Title></Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <Form >\n                  <Form.Group>\n                    <Form.Label>What did he do now?</Form.Label>\n                    <Form.Control type=\"action\" placeholder=\"\"  onChange={this.handleAddAction.bind(this)}/>\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\" onClick={this.handleOnSubmitAction.bind(this)}>\n                    Submit\n                  </Button>\n                </Form>\n                </Modal.Body>\n                </Modal>\n              </div>\n              <ActionsList actions = {this.state.actions}/>\n              </Col>\n              </Row>\n            </div>\n            </Col>\n            <Col xs={7} className=\"border-right\">\n            <div >\n              <BingoBoard dadisms={this.state.current_board} \n                          active_dadisms={this.state.active_dadisms}  \n                          game_id={this.state.game_id}/>\n            </div>\n            </Col>\n            <Col xs={2}>\n            <Row>\n              <span><br/></span>\n              </Row>\n            <Row>\n              <Col>\n              <h4 className=\"app_title_font\">Players</h4>\n              </Col>\n              </Row>\n            <Row>\n              <Col>\n              <PlayerStatus active_dadisms={this.state.active_dadisms} \n                            other_current_boards={this.state.other_current_boards} \n                            user_={this.state.user_id}/>\n              </Col>\n              </Row>\n            </Col>\n          </Row>\n          </Container>\n          </div>\n      )\n  }\n}\n    \nexport default UserHome;","/Users/Ted/dad-bingo/src/NavBar.js",["70","71","72","73","74","75"],"/Users/Ted/dad-bingo/src/SmallBingoBoard.js",["76"],"import React from \"react\";\nimport SmallSquare from './SmallSquare'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass SmallBingoBoard extends React.Component {\n    \n  render() {\n        if (this.props.user_board_info.board.length > 0) {\n          return (\n            <div>\n            <small><b>{this.props.user_board_info.user_name}</b></small>\n            <Col >\n            \n            <Row>\n            \n            {this.props.user_board_info.board.slice(0,5).map( (dadism,idx) => {\n              return <Col id={\"small_square_\" + idx} className=\"small_square\"><SmallSquare dadism={dadism} active_dadisms={this.props.user_board_info.active_dadisms} game_id={this.props.game_id}/></Col> })}\n            \n            </Row>\n            \n            <Row>\n            \n            {this.props.user_board_info.board.slice(5,10).map( (dadism,idx) => {\n              return <Col id={\"small_square_\" + idx} className=\"small_square\"><SmallSquare dadism={dadism} active_dadisms={this.props.user_board_info.active_dadisms} game_id={this.props.game_id}/></Col> })}\n            \n            </Row>\n          \n            <Row>\n            \n            {this.props.user_board_info.board.slice(10,15).map( (dadism,idx) => {\n              return <Col id={\"small_square_\" + idx} className=\"small_square\"><SmallSquare dadism={dadism} active_dadisms={this.props.user_board_info.active_dadisms}  game_id={this.props.game_id}/></Col> })}\n            \n            </Row>\n          \n            <Row>\n            \n            {this.props.user_board_info.board.slice(15,20).map( (dadism,idx) => {\n              return <Col id={\"small_square_\" + idx} className=\"small_square\"><SmallSquare dadism={dadism} active_dadisms={this.props.user_board_info.active_dadisms} game_id={this.props.game_id}/></Col> })}\n            \n            </Row>\n          \n            <Row>\n            \n            {this.props.user_board_info.board.slice(20,25).map( (dadism,idx) => {\n              return <Col id={\"small_square_\" + idx}className=\"small_square\"><SmallSquare dadism={dadism} active_dadisms={this.props.user_board_info.active_dadisms} game_id={this.props.game_id}/></Col> })}\n            \n            </Row>\n            \n            \n            </Col >\n            </div>\n              )\n          } else {\n            return (<div></div>)\n          }\n      \n      \n    \n  }  \n};\n\nexport default SmallBingoBoard;","/Users/Ted/dad-bingo/src/SmallSquare.js",["77","78","79"],"import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faToggleOff } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\n\n\n\nclass SmallSquare extends React.Component {\n\n  \n  render() {\n      return (\n        <div className={this.props.active_dadisms.includes(this.props.dadism._id) ? 'active_small_square small_square': 'inactive_small_square small_square'}>          \n          <div  className='small_square_text'></div>\n        </div>)\n  }  \n};\n\nexport default SmallSquare;","/Users/Ted/dad-bingo/src/MainScreen.js",["80"],"import React from \"react\";\nimport griswold from \"./griswold.jpeg\";\n\n\n\nimport { DadBingoNavBar } from './NavBar'\nimport _ from \"underscore\";\n\n\nclass MainScreen extends React.Component {\n\n  render() {\n    return (\n          <div className=\"dadBingoContainer\">\n          \n          <div id=\"griswold\">\n          <img  src={griswold} alt=\"griswold\"  />\n          </div>\n          <DadBingoNavBar logged_in={false} _id={\"DadBingoNavBarMainPage\"}/>\n          </div>\n      );\n  }\n}\n    \nexport default MainScreen;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":13},{"ruleId":"85","severity":1,"message":"89","line":18,"column":13,"nodeType":"87","messageId":"88","endLine":18,"endColumn":22},{"ruleId":"85","severity":1,"message":"90","line":21,"column":26,"nodeType":"87","messageId":"88","endLine":21,"endColumn":40},{"ruleId":"91","severity":1,"message":"92","line":82,"column":30,"nodeType":"93","messageId":"94","endLine":82,"endColumn":32},{"ruleId":"85","severity":1,"message":"95","line":46,"column":9,"nodeType":"87","messageId":"88","endLine":46,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":57,"column":60,"nodeType":"98","endLine":57,"endColumn":77},{"ruleId":"85","severity":1,"message":"99","line":97,"column":10,"nodeType":"87","messageId":"88","endLine":97,"endColumn":14},{"ruleId":"85","severity":1,"message":"100","line":129,"column":9,"nodeType":"87","messageId":"88","endLine":129,"endColumn":19},{"ruleId":"85","severity":1,"message":"99","line":173,"column":10,"nodeType":"87","messageId":"88","endLine":173,"endColumn":14},{"ruleId":"85","severity":1,"message":"100","line":210,"column":9,"nodeType":"87","messageId":"88","endLine":210,"endColumn":19},{"ruleId":"85","severity":1,"message":"101","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":17},{"ruleId":"85","severity":1,"message":"102","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"103","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":21},{"ruleId":"85","severity":1,"message":"104","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":20},{"ruleId":"85","severity":1,"message":"105","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":9},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'user_name' is assigned a value but never used.","'NewSayingModal' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'history' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'show' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'Container' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faToggleOff' is defined but never used.","'faToggleOn' is defined but never used.","'_' is defined but never used.","no-global-assign","no-unsafe-negation"]